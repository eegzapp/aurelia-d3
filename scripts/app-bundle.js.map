{"version":3,"sources":["app.js","environment.js","main.js","my-d3.js","spam-spam.js","resources/index.js","G:/MY_DATA/aurelia-d3/src/app.html","G:/MY_DATA/aurelia-d3/src/my-d3.html","G:/MY_DATA/aurelia-d3/src/spam-spam.html"],"names":["App","message","debug","testing","configure","Promise","config","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","MyD3","myData","attached","thisChart","selectAll","data","enter","append","style","d","text","elm","SpamSpam"],"mappings":";;;;;;;;;;;;;MAAaA,cAAAA,MACX,eAAc;AAAA;;AACZ,SAAKC,OAAL,GAAe,CAAf;AACD;;;;;;;;oBCHY;AACbC,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCUCC,YAAAA;;;;;;;;;;AAPhBC,UAAQC,MAAR,CAAe;AACbC,qBAAiB,sBAAYL,KADhB;AAEbM,cAAU;AACRC,wBAAkB;AADV;AAFG,GAAf;;AAOO,WAASL,SAAT,CAAmBM,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYX,KAAhB,EAAuB;AACrBQ,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYX,OAAhB,EAAyB;AACvBO,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMP,QAAQQ,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCpBYC,eAAAA;AAGX,oBAAc;AAAA;;AAAA;;AACZ,WAAKC,MAAL,GAAc,GAAd;AACD;;mBAEDC,+BAAW;;AAMT,qBAAO,KAAKC,SAAZ,EACGC,SADH,CACa,KADb,EAEKC,IAFL,CAEU,KAAKJ,MAFf,EAGGK,KAHH,GAGWC,MAHX,CAGkB,KAHlB,EAIKC,KAJL,CAIW,OAJX,EAIoB;AAAA,eAAKC,IAAE,EAAF,GAAK,IAAV;AAAA,OAJpB,EAKKD,KALL,CAKW,kBALX,EAK+B,KAL/B,EAMKE,IANL,CAMU,UAACC,GAAD;AAAA,eAASA,GAAT;AAAA,OANV;AAgBG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MC/BMC,mBAAAA,qBAEX,oBAAc;AAAA;;AAAA;;AACZ,SAAK9B,OAAL,GAAe,oBAAf;AACD;;;;;;;;;;;UCNaG,YAAAA;AAAT,WAASA,SAAT,CAAmBE,MAAnB,EAA2B,CAEjC;;ACFD;ACAA;ACAA","file":"app-bundle.js","sourcesContent":["export class App {\n  constructor() {\n    this.message = 5;\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","\r\nimport { bindable } from 'aurelia-framework';\r\nimport { select, timeFormat } from 'd3';\r\n\r\nexport class MyD3 {\r\n  @bindable myData;\r\n\r\n  constructor() {\r\n    this.myData = \"X\";\r\n  }\r\n\r\n  attached() {\r\n\r\n/**\r\n * Draw a bar chart with the width of each bar set by each element passed in \r\n */\r\n\r\n    select(this.thisChart) // grab the chart div\r\n      .selectAll('div')  // select all div children (should be empty)\r\n        .data(this.myData)  // associate data with the selection. This is weirdness. If there's 8 pieces of data in this.myData, then 8 enter() events will be registered\r\n      .enter().append('div')  // handle the 8 enter events. In this case, we're appending a 'div' for each...\r\n        .style('width', d => d*10+'px')  // Then setting it's style...\r\n        .style('background-color', 'red')\r\n        .text((elm) => elm);  // And width (because they're bars in a horizontal bar chart)\r\n\r\n        /*\r\n        var formatMonth = timeFormat(\"%B\"),\r\n            formatDay = timeFormat(\"%A\"),\r\n            date = new Date(2014, 4, 1); \r\n\r\n            console.log(formatMonth(date)); // \"May\"\r\n            console.log(formatDay(date)); // \"Thursday\"\r\n            */\r\n      }    \r\n}\r\n\r\n","import { bindable } from 'aurelia-framework';\r\n\r\nexport class SpamSpam {\r\n  @bindable message;\r\n  constructor() {\r\n    this.message = 'Spam, mighty spam!';\r\n  }\r\n}","export function configure(config) {\n  //config.globalResources([]);\n}\n",null,null,null],"sourceRoot":"../src"}